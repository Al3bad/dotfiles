set completeopt=menu,menuone,noselect

lua << EOF
--   -- Setup nvim-cmp.
--   local lspconfig = require 'lspconfig'
--   local configs = require 'lspconfig/configs'
--   local cmp = require'cmp'
--   local cmd_lsp = require('cmp_nvim_lsp')
-- 
--   cmp.setup({
--     snippet = {
--       -- REQUIRED - you must specify a snippet engine
--       expand = function(args) vim.fn["vsnip#anonymous"](args.body) end,
--     },
--     mapping = {
--       ['<C-d>'] = cmp.mapping(cmp.mapping.scroll_docs(-4), { 'i', 'c' }),
--       ['<C-f>'] = cmp.mapping(cmp.mapping.scroll_docs(4), { 'i', 'c' }),
--       ['<C-Space>'] = cmp.mapping(cmp.mapping.complete(), { 'i', 'c' }),
--       ['<C-y>'] = cmp.config.disable, -- Specify `cmp.config.disable` if you want to remove the default `<C-y>` mapping.
--       ['<C-e>'] = cmp.mapping({
--         i = cmp.mapping.abort(),
--         c = cmp.mapping.close(),
--       }),
--       ['<CR>'] = cmp.mapping.confirm({ select = true }),
--     },
--     sources = cmp.config.sources({ { name = 'nvim_lsp' }, { name = 'vsnip' } }, { { name = 'buffer' } })
--   })
-- 
--   -- Use buffer source for `/` (if you enabled `native_menu`, this won't work anymore).
--   cmp.setup.cmdline('/', {
--     sources = {
--       { name = 'buffer' },
--       { name = 'nvim_lsp' },
--       { name = 'look' }
--       }
--   })
-- 
--   -- Use cmdline & path source for ':' (if you enabled `native_menu`, this won't work anymore).
--   cmp.setup.cmdline(':', {
--     sources = cmp.config.sources({ { name = 'path' } }, { { name = 'cmdline' } })
--   })
-- 
-- 
-- 
--   -- Setup lspconfig.
--   local c = vim.lsp.protocol.make_client_capabilities()
--   local capabilities = cmd_lsp.update_capabilities(c)
--   lspconfig['tsserver'].setup { capabilities = capabilities }
--   lspconfig['html'].setup { capabilities = capabilities }
EOF
